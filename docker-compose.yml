version: '3'
services:
  api:
    container_name: api
    build: 
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - app_network
    environment:
      - HOST=${HOST}
      - CLIENT_HOST=${CLIENT_HOST}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_SECURE=${EMAIL_SECURE}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_TOKEN_LIFE_TIME=${JWT_TOKEN_LIFE_TIME}
      - HASH_SECRET=${HASH_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_USER=${REDIS_USER}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_URL=${REDIS_URL}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  web:
    container_name: web
    build: 
      context: ./fe
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app_network
    environment:
      - SERVER_URL=${SERVER_URL}
      - DOMAIN=${DOMAIN}
      - COOKIE_DOMAIN=${COOKIE_DOMAIN}
      - COOKIE_SESSION_SECRET=${COOKIE_SESSION_SECRET}
  
    depends_on:
      - api
  
  redis:
    container_name: redis-cache
    image: "redis:7.2.4-alpine"
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
    networks:
      - app_network
    ports:
      - "6379:6379"

  postgres:
    container_name: postgres
    image: "postgres:16.2-alpine3.19"
    user: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - app_network
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data

volumes:
  dbdata:

networks:
  app_network:
    driver: bridge